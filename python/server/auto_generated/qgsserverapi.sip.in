/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/server/qgsserverapi.h                                            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsServerApi
{
%Docstring
Server API endpoint abstract base class.

An API must have a name and a (possibly empty) version and define a
(possibly empty) root path (e.g. "/wfs3").

After the API has been registered to the server API registry:

.. code-block:: python

       class API(QgsServerApi):

         def name(self):
           return "Test API"

         def rootPath(self):
           return "/testapi"

         def executeRequest(self, request_context):
           request_context.response().write(b"\"Test API\"")

       server = QgsServer()
       api = API(server.serverInterface())
       server.serverInterface().serviceRegistry().registerApi(api)

the incoming calls with an URL path starting with the API root path
will be routed to the first matching API and executeRequest() method
of the API will be invoked.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverapi.h"
%End
  public:

    QgsServerApi( QgsServerInterface *serverIface );
%Docstring
Creates a QgsServerApi object
%End

    virtual ~QgsServerApi();

    virtual const QString name() const = 0;
%Docstring
Returns the API name
%End

    virtual const QString version() const;
%Docstring
Returns the version of the service

.. note::

   the default implementation returns an empty string
%End

    virtual const QString rootPath() const = 0;
%Docstring
Returns the root path for the API
%End

    virtual bool allowMethod( QgsServerRequest::Method ) const;
%Docstring
Returns ``True`` if the given method is supported by the API, default implementation supports all methods.
%End

    virtual void executeRequest( QgsServerApiContext *context ) const = 0;
%Docstring
Executes a request by passing the given ``context`` to the handlers.
%End

    QgsServerInterface *serverIface() const;
%Docstring
Returns the server interface
%End

};




/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/server/qgsserverapi.h                                            *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
