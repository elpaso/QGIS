/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/server/qgsserverexception.h                                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsServerException
{
%Docstring
Exception base class for server exceptions.

.. versionadded:: 3.0
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerException( const QString &message, int responseCode = 500 );
%Docstring
Constructor
%End

    int responseCode() const;
%Docstring

:return: the return HTTP response code associated with this exception
%End

    virtual QByteArray formatResponse( QString &responseFormat /Out/ ) const;
%Docstring
Formats the exception for sending to client


:return: - QByteArray The formatted response.
         - responseFormat: QString to store the content type of the response format.

The default implementation returns text/xml format.
%End

};

class QgsOgcServiceException
{
%Docstring
Exception base class for service exceptions.

Note that this exception is associated with a default return code 200 which may be
not appropriate in some situations.

.. versionadded:: 3.0
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsOgcServiceException( const QString &code, const QString &message, const QString &locator = QString(),
                            int responseCode = 200, const QString &version = QStringLiteral( "1.3.0" ) );
%Docstring
Construction
%End

    QString message() const;
%Docstring
Returns the exception message
%End

    QString code()    const;
%Docstring
Returns the exception code
%End

    QString locator() const;
%Docstring
Returns the locator
%End

    QString version() const;
%Docstring
Returns the exception version
%End

    virtual QByteArray formatResponse( QString &responseFormat /Out/ ) const;


};


class QgsServerApiException: QgsServerException
{
%Docstring
Exception base class for API exceptions.

Note that this exception is associated with a default return code 200 which may be
not appropriate in some situations.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiException( const QString &code, const QString &message, const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 200 );
%Docstring
Construction
%End

    virtual QByteArray formatResponse( QString &responseFormat /Out/ ) const;

};


class QgsServerApiInternalServerError: QgsServerApiException
{
%Docstring
Internal server error API exception.

Note that this exception is associated with a default return code 500 which may be
not appropriate in some situations.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiInternalServerError( const QString &message = QStringLiteral( "Internal server error" ), const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 500 );
%Docstring
Construction
%End
};


class QgsServerApiNotFoundError: QgsServerApiException
{
%Docstring
Not found error API exception.

Note that this exception is associated with a default return code 404 which may be
not appropriate in some situations.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiNotFoundError( const QString &message, const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 404 );
%Docstring
Construction
%End
};


class QgsServerApiBadRequestError: QgsServerApiException
{
%Docstring
Bad request error API exception.

Note that this exception is associated with a default return code 400 which may be
not appropriate in some situations.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiBadRequestError( const QString &message, const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 400 );
%Docstring
Construction
%End
};


class QgsServerApiImproperlyConfiguredError: QgsServerApiException
{
%Docstring
configuration error on the server prevents to serve the request, which would be valid otherwise.

Note that this exception is associated with a default return code 500 which may be
not appropriate in some situations.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiImproperlyConfiguredError( const QString &message, const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 500 );
%Docstring
Construction
%End
};


class QgsServerApiNotImplementedError: QgsServerApiException
{
%Docstring
this method is not yet implemented

Note that this exception is associated with a default return code 500 which may be
not appropriate in some situations.

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiNotImplementedError( const QString &message = QStringLiteral( "Requested method is not implemented" ), const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 500 );
%Docstring
Construction
%End
};


class QgsServerApiInvalidMimeType: QgsServerApiException
{
%Docstring
the client sent an invalid mime type in the "Accept" header

Note that this exception is associated with a default return code 406

.. versionadded:: 3.10
%End

%TypeHeaderCode
#include "qgsserverexception.h"
%End
  public:
    QgsServerApiInvalidMimeType( const QString &message = QStringLiteral( "The Accept header submitted in the request did not support any of the media types supported by the server for the requested resource" ), const QString &mimeType = QStringLiteral( "application/json" ), int responseCode = 406 );
%Docstring
Construction
%End
};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/server/qgsserverexception.h                                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
